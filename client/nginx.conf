events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Конфигурация для продакшена с SSL
    server {
        listen 80;
        server_name thunder-store.ru;
        
        # В локальной среде обслуживаем на порту 80
        # В продакшене редиректим на HTTPS
        location / {
            # Проверяем существование SSL сертификата
            if (-f /etc/letsencrypt/live/thunder-store.ru/fullchain.pem) {
                return 301 https://$host$request_uri;
            }
            
            # Если сертификата нет, обслуживаем напрямую (для локальной разработки)
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
    
    # HTTPS сервер (только для продакшена)
    server {
        listen 443 ssl;
        server_name thunder-store.ru;
        
        # Проверяем существование сертификатов
        ssl_certificate_key /etc/letsencrypt/live/thunder-store.ru/privkey.pem;
        ssl_certificate /etc/letsencrypt/live/thunder-store.ru/fullchain.pem;
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location /ws/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        
        location /assets/static/ {
            alias /usr/share/nginx/html/assets/static/;
        }
        
        location ~* \.(js|mjs)$ {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
        }
        
        location ~* \.css$ {
            root /usr/share/nginx/html;
            add_header Content-Type text/css;
        }
    }
    
    # Дублируем конфигурацию API для HTTP (для локальной разработки)
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location /ws/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        
        location /assets/static/ {
            alias /usr/share/nginx/html/assets/static/;
        }
        
        location ~* \.(js|mjs)$ {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
        }
        
        location ~* \.css$ {
            root /usr/share/nginx/html;
            add_header Content-Type text/css;
        }
    }
}
